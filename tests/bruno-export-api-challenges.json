{
  "name": "To-Do List API Challenges",
  "version": "1",
  "items": [
    {
      "type": "folder",
      "name": "01 - Getting Started",
      "items": [
        {
          "type": "http",
          "name": "01 - POST challenger",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/challenger",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {
              "res": "bru.setEnvVar(\"challenger-id\", res.headers['x-challenger'])"
            },
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "X1aCKxDWIG7ujY3IZOukH"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "02 - First Real Challenge",
      "items": [
        {
          "type": "http",
          "name": "02 - GET challenges",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/challenges",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "t3ARbLaJLjD3lr0E4FGnX"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "03 - GET Challenges",
      "items": [
        {
          "type": "http",
          "name": "03 - GET todos",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "MIebyD6iWX3CU5ONEutEi"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "06 - GET todos with id (does not exist)",
          "seq": 4,
          "request": {
            "url": "{{base_url}}/todos/0",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 404",
                "enabled": true,
                "uid": "dpOwJUTVCbnFjGWs6k1N4"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "04 - GET todo not plural",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todo",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 404",
                "enabled": true,
                "uid": "p64gaif82t4SLJWOpQzDs"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "05 - GET todos with id",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/todos/1",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "XqlIwNYWkBpqVPlgZZxdb"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "04 - HEAD Challenges",
      "items": [
        {
          "type": "http",
          "name": "08 - HEAD todos",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "HEAD",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "IzrJvy1N5m6lGZZYz3zg4"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "05 - Creation Challenges with POST",
      "items": [
        {
          "type": "http",
          "name": "09 - POST new todo",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"A title\",\n  \"doneStatus\": false,\n  \"description\": \"my description\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "S3UBkVQu0qlzCoHQHWbyj"
              },
              {
                "name": "res.body.title",
                "value": "isString res.body[]",
                "enabled": true,
                "uid": "dcDo0994JYZVFFqrPzwJP"
              },
              {
                "name": "res.body.description",
                "value": "isString",
                "enabled": true,
                "uid": "kvJx3HhOV3F86BOq9sR87"
              },
              {
                "name": "res.body.doneStatus",
                "value": "isBoolean",
                "enabled": true,
                "uid": "uHM27NxdFM0Tv8L3HcIdr"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "10 - POST todo invalid doneStatus",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"A title\",\n  \"doneStatus\": \"done\",\n  \"description\": \"my description\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 400",
                "enabled": true,
                "uid": "YBpf9cfdAEAJet8VcdiHt"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "11 - POST todo title exceeds 50 chars",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"This to-do title will be exactly 51 characters long\",\n  \"doneStatus\": false,\n  \"description\": \"my description\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 400",
                "enabled": true,
                "uid": "ufgt4j9gAVRdqNqGNmFn0"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "12 - POST todo desc exceeds 200 chars",
          "seq": 4,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"Description too long test\",\n  \"doneStatus\": false,\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla at nulla nec neque efficitur euismod sit amet ut sapien. Donec ornare nec dui nec ornare. Morbi luctus ligula ante, eget maximus arcu sed.\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 400",
                "enabled": true,
                "uid": "DljBqbuzqyS5b7502hg1V"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "13 - POST todo max content",
          "seq": 5,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"Todo task title will be exactly 50 characters long\",\n  \"doneStatus\": false,\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla at nulla nec neque efficitur euismod sit amet ut sapien. Donec ornare nec dui nec ornare. Morbi luctus ligula ante, eget maximus arcu sed\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "B9i1acQdDU3JKVtd32USH"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "14 - POST todo content too long",
          "seq": 6,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"Content too long test\",\n  \"doneStatus\": false,\n  \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam a massa faucibus ex facilisis pretium at vitae mi. Nulla facilisi. Sed ut pharetra nunc. Praesent tincidunt tellus vel tellus gravida mollis. Aenean cursus magna id ligula tincidunt, in eleifend leo fermentum. Nam tempus vel tortor ut auctor. Cras eget turpis enim. Aenean felis dolor, ullamcorper a ex vitae, iaculis aliquam purus. Aenean nisi tortor, rutrum et vulputate id, varius elementum tortor. Phasellus lacinia gravida nulla, commodo posuere est feugiat nec. Vivamus tincidunt tellus urna, vulputate egestas massa cursus et. Proin hendrerit metus id libero sodales lobortis. In hac habitasse platea dictumst. Aenean pharetra mattis leo nec fringilla. Integer fringilla molestie massa, vitae ornare risus facilisis sit amet. Fusce imperdiet arcu a leo cursus, id vulputate nunc fermentum. Nulla pharetra in sapien sed iaculis. Integer interdum ante nunc, in lobortis nisi aliquet eu. Donec finibus dolor quis augue sodales, eu accumsan lectus efficitur. Fusce malesuada mauris non lacus lacinia efficitur. Pellentesque egestas in sem et aliquet. Integer enim nulla, porttitor sed mi id, porttitor tempus est. Pellentesque ipsum sem, ornare a neque id, maximus facilisis erat. Curabitur porta tortor a sodales malesuada. Praesent non tempor dolor. Nullam eros eros, aliquam vitae dapibus at, tempus viverra ex. Aliquam malesuada semper risus, non porta libero finibus sagittis. Morbi sagittis, sapien vitae consectetur gravida, elit erat laoreet velit, quis blandit nibh ligula ut tortor. Curabitur nec velit id odio imperdiet porttitor. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Fusce id purus id diam elementum accumsan. Aliquam ultrices, metus et dignissim auctor, lacus ex commodo nibh, semper consequat erat sem a tortor. Aliquam sit amet nibh massa. Duis dignissim, metus ut consequat egestas, enim nibh pharetra mi, ac ultrices nibh est at tellus. Integer vitae pharetra leo. Etiam accumsan orci vehicula eros dapibus sollicitudin. Curabitur suscipit viverra ullamcorper. Morbi euismod luctus dolor, vitae ultricies quam finibus quis. Curabitur tellus orci, sodales quis sollicitudin eu, ullamcorper vitae purus. Vestibulum tellus odio, viverra id imperdiet rutrum, blandit in nunc. Phasellus in mauris eget mi vulputate lacinia vitae vel nulla. Aenean iaculis quis nibh et rhoncus. Ut viverra enim sit amet massa mollis, ut fringilla massa bibendum. Praesent viverra lorem a lacinia iaculis. Donec commodo, mauris posuere consectetur mattis, eros justo pharetra tellus, eget euismod sapien orci sed orci. Nunc sodales accumsan orci, eget facilisis ante semper at. Praesent euismod ultrices nisi, ut egestas nulla scelerisque sit amet. Aliquam erat volutpat. Aliquam vestibulum ultricies elit, at ullamcorper diam scelerisque sit amet. Duis a dui ultrices, iaculis risus a, lobortis neque. Quisque lorem arcu, aliquam quis purus id, volutpat auctor est. Proin rutrum nulla pulvinar velit sagittis, sed fermentum ex dapibus. Cras cursus diam sed tristique ullamcorper. Praesent convallis risus urna, ac pellentesque est iaculis in. Maecenas viverra interdum eros, nec venenatis sem sodales vel. Duis hendrerit pretium dui vel blandit. Pellentesque sed erat quis urna accumsan tristique quis ut magna. Vestibulum nec dolor feugiat, fringilla turpis quis, tempor arcu. Nullam tortor eros, fermentum quis augue at, sagittis hendrerit nulla. Maecenas ut dolor sed massa auctor convallis. Proin vitae elit tristique, consectetur tortor vel, fringilla urna. Curabitur interdum tempor odio et blandit. Cras a placerat metus, ut venenatis ex. Cras pulvinar metus a tellus bibendum, non vestibulum diam imperdiet. Nullam tempor nisl quis risus dapibus consequat. Morbi posuere risus lectus, eget pretium mi sodales sed. In accumsan elit a facilisis egestas. Proin sodales ultricies pellentesque. Aenean mollis scelerisque convallis. Vestibulum vel nulla faucibus, sagittis dui non, molestie velit. Morbi pulvinar dapibus quam id hendrerit. In gravida sed arcu in interdum. Suspendisse faucibus ullamcorper pellentesque. Pellentesque tempus tempus turpis ullamcorper maximus. Nunc lacinia est vitae ex fermentum sollicitudin. Etiam in tellus maximus, aliquam ligula nec, auctor nibh. In consectetur aliquam magna, at placerat orci mollis dignissim. Curabitur et lorem nisl. Cras leo dolor, maximus a ex sed, elementum efficitur velit. Aliquam suscipit, libero sed pretium commodo, nisl risus aliquam orci, a suscipit nulla odio a eros. Aenean nec lectus non risus luctus mollis ultricies a nisl. Donec lectus lorem, placerat in arcu at, vehicula maximus nisl. Morbi velit felis, congue maximus nibh vel, cursus feugiat justo. In a facilisis ligula, et pellentesque odio. Vivamus ac maximus lacus. Donec cursus at odio et tempus. Morbi porta vehicula lobortis. Ut lacus tellus, euismod et nisl condimentum, malesuada ornare felis. Duis consequat, nibh scelerisque porttitor semper, risus a.\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 413",
                "enabled": true,
                "uid": "KH952oYjxsAvTzokq7s08"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "15 - POST todo unknown field",
          "seq": 7,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"I am a title\",\n  \"doneStatus\": false,\n  \"description\": \"I'm a description.\",\n  \"bonusField\": \"I am an extra field that does not exist in the spec.\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 400",
                "enabled": true,
                "uid": "2WLsSYxKu2lmknuKksBvI"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "06 - Creation Challenges with PUT",
      "items": [
        {
          "type": "http",
          "name": "16 - PUT to create a todo with new id",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos/9999",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"PUT test new todo\",\n  \"doneStatus\": false,\n  \"description\": \"This is a PUT test to attempt to create a todo.\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 400",
                "enabled": true,
                "uid": "nYbZXdgc9ViGZGOmzD9kr"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "PUT to create a todo with no id",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todos/",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"PUT test new todo\",\n  \"doneStatus\": false,\n  \"description\": \"This is a PUT test to attempt to create a todo.\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 404",
                "enabled": true,
                "uid": "BAjAtPbBiLN62SuHcZCOA"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "08 - Update Challenges with PUT",
      "items": [
        {
          "type": "http",
          "name": "19 - PUT update all todo details",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos/1",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"Updated todo title\",\n  \"doneStatus\": true,\n  \"description\": \"Updated todo description. The todo should be done status.\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "wGkz7utmXhIqhzrxeQbaL"
              },
              {
                "name": "res.body.title",
                "value": "eq Updated todo title",
                "enabled": true,
                "uid": "N4VrRxrkCi7TBmxCzw75i"
              },
              {
                "name": "res.body.doneStatus",
                "value": "eq true",
                "enabled": true,
                "uid": "o0FP6aYjJvucXFGkVVwXh"
              },
              {
                "name": "res.body.description",
                "value": "eq Updated todo description. The todo should be done status.",
                "enabled": true,
                "uid": "3r1dN9EdBZU15485b4nLy"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "20 - PUT update partial (title)",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todos/1",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"Only the title is updated\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "12eLV9TusbkYs2aD80DgY"
              },
              {
                "name": "res.body.title",
                "value": "eq Only the title is updated",
                "enabled": true,
                "uid": "rUv4WkXuLzGaVVTWeJ6WB"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "21 - PUT no title",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/todos/1",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 400",
                "enabled": true,
                "uid": "HSRqYaUqrRNfXeDW3OQ8c"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "22 - PUT no amend id",
          "seq": 4,
          "request": {
            "url": "{{base_url}}/todos/1",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"id\": 2,\n  \"title\": \"This is an amended title\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 400",
                "enabled": true,
                "uid": "Al1o5Fg7rlub4v6Xoofeu"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "07 - Update Challenges with POST",
      "items": [
        {
          "type": "http",
          "name": "17 - POST to update todo to done",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos/1",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"doneStatus\": true\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "IUXdQYp8Hgy8EuusBpGCj"
              },
              {
                "name": "res.body.doneStatus",
                "value": "eq true",
                "enabled": true,
                "uid": "PYXszafhaR2aDbPL0rspX"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "18 - POST to update an invaild todo id",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todos/9999",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"doneStatus\": true\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 404",
                "enabled": true,
                "uid": "neRTrGPiyXNUCnvrlRD73"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "09 - DELETE Challenges",
      "items": [
        {
          "type": "http",
          "name": "23 - DELETE todo",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos/1",
            "method": "DELETE",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"id\": 2,\n  \"title\": \"This is an amended title\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "l8bGVEtewGkipksvICZ16"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "10 - OPTIONS Challenges",
      "items": [
        {
          "type": "http",
          "name": "24 - OPTIONS todo",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "OPTIONS",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 204",
                "enabled": true,
                "uid": "elUkLhszEI3u6nhH6k0QP"
              },
              {
                "name": "res.headers.allow",
                "value": "eq OPTIONS, GET, HEAD, POST",
                "enabled": true,
                "uid": "YnB6Y5iENSnqigLetGmD0"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "11 - Accept Challenges",
      "items": [
        {
          "type": "http",
          "name": "25 - GET todos XML",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/xml",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "CUzw5SbTmPO5YGtLRic4W"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/xml",
                "enabled": true,
                "uid": "iPz7lrTtvADaeYvFZlUxw"
              },
              {
                "name": "res.body",
                "value": "startsWith <todos>",
                "enabled": true,
                "uid": "UyXanyej9In65sF9qR8Df"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "26 - GET todos JSON",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "e1mFKirVVCF7GlzOIUSbX"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/json",
                "enabled": true,
                "uid": "a7xtYJDFg7SEaMZRf957O"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "27 - GET todos ANY",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "*/*",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "RQ3jpi8zz0Zf6HoZDZOi2"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/json",
                "enabled": true,
                "uid": "K1gTiIwMU6mK6YEZau3Wt"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "28 - GET todos XML pref",
          "seq": 4,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/xml, application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "79yagXHBjLe4edxP1CySj"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/xml",
                "enabled": true,
                "uid": "ycRtUO3hyAu4S2OhlBptS"
              },
              {
                "name": "res.body",
                "value": "startsWith <todos>",
                "enabled": true,
                "uid": "KaO8Y6Wkwh5JQbj4OzNGV"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "29 - GET todos no accept",
          "seq": 5,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "VctNKcKotuPy8ityqpQ6q"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/json",
                "enabled": true,
                "uid": "E7y4sDTjUflW7w85hHC5F"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "30 - GET todos invalid accept",
          "seq": 6,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "GET",
            "headers": [
              {
                "name": "Accept",
                "value": "application/gzip",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 406",
                "enabled": true,
                "uid": "wXl4UcweozRmm5zbCKBNL"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "12 - Content-Type Challenges",
      "items": [
        {
          "type": "http",
          "name": "31 - POST todos XML",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/xml",
                "enabled": true
              }
            ],
            "body": {
              "mode": "xml",
              "json": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>my description</description>\n  <title>A title</title>\n</todo>",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "Kluo5A7MTsNwccpJMNhqI"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/xml",
                "enabled": true,
                "uid": "OUzV7x7aOdAcmRHVbCBj9"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "32 - POST todos JSON",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"Challenge 32 JSON Task Created\",\n  \"doneStatus\": false,\n  \"description\": \"This is a task created using POST for a JSON content type.\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "V9jpjWtIj2QwrsTClRtjE"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/json",
                "enabled": true,
                "uid": "bABcysqTFybhr7vlEknSu"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "33 - POST todos 415 status",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/pdf",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "*/*",
                "enabled": true
              }
            ],
            "body": {
              "mode": "text",
              "json": "{\n  \"title\": \"Challenge 32 JSON Task Created\",\n  \"doneStatus\": false,\n  \"description\": \"This is a task created using POST for a JSON content type.\"\n}",
              "text": "This is just placeholder text.",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 415",
                "enabled": true,
                "uid": "4pFlih0iIj2gneRHehBmH"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "13 - Restore your session",
      "items": [
        {
          "type": "http",
          "name": "34 - GET challenger guid",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/challenger/{{challenger_id}}",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"Challenge 32 JSON Task Created\",\n  \"doneStatus\": false,\n  \"description\": \"This is a task created using POST for a JSON content type.\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "LjhjnK1v40smQ2ymPdZjr"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "38 - PUT challenger database guid",
          "seq": 5,
          "request": {
            "url": "{{base_url}}/challenger/database/{{challenger_id}}",
            "method": "PUT",
            "headers": [],
            "body": {
              "mode": "json",
              "json": "{\n  \"todos\": [\n    {\n      \"id\": 3,\n      \"title\": \"process payments\"\n    },\n    {\n      \"id\": 2,\n      \"title\": \"file paperwork\"\n    },\n    {\n      \"id\": 8,\n      \"title\": \"schedule meeting\"\n    },\n    {\n      \"id\": 9,\n      \"title\": \"tidy meeting room\"\n    },\n    {\n      \"id\": 10,\n      \"title\": \"install webcam\"\n    },\n    {\n      \"id\": 7,\n      \"title\": \"train staff\"\n    },\n    {\n      \"id\": 1,\n      \"title\": \"scan paperwork\"\n    },\n    {\n      \"id\": 4,\n      \"title\": \"escalate early payments\"\n    },\n    {\n      \"id\": 6,\n      \"title\": \"process payroll\"\n    },\n    {\n      \"id\": 5,\n      \"title\": \"pay invoices\"\n    }\n  ]\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 204",
                "enabled": true,
                "uid": "Ujz3WFisHmnQc1sUEfx0z"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "37 - GET challenger database guid",
          "seq": 4,
          "request": {
            "url": "{{base_url}}/challenger/database/{{challenger_id}}",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"Challenge 32 JSON Task Created\",\n  \"doneStatus\": false,\n  \"description\": \"This is a task created using POST for a JSON content type.\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "SEPun2PAsHErydOf5xXJZ"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "35 - PUT challenger guid RESTORE",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/challenger/{{challenger_id}}",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"xAuthToken\": \"0101c414-c0cf-4adb-8e05-7983b3e0172e\",\n  \"xChallenger\": \"{{challenger_id}}\",\n  \"secretNote\": \"This note has text.\",\n  \"challengeStatus\": {\n    \"POST_CREATE_JSON_ACCEPT_XML\": true,\n    \"POST_TODOS_TOO_LONG_TITLE_LENGTH\": true,\n    \"GET_UNSUPPORTED_ACCEPT_406\": true,\n    \"GET_SECRET_NOTE_200\": true,\n    \"PUT_RESTORABLE_TODOS\": true,\n    \"OVERRIDE_DELETE_HEARTBEAT_405\": true,\n    \"POST_MAX_OUT_TITILE_DESCRIPTION_LENGTH\": true,\n    \"POST_SECRET_NOTE_401\": true,\n    \"DELETE_A_TODO\": true,\n    \"PUT_TODOS_FULL_200\": true,\n    \"GET_JSON_BY_DEFAULT_NO_ACCEPT\": true,\n    \"GET_CHALLENGES\": true,\n    \"POST_TODOS_BAD_DONE_STATUS\": true,\n    \"GET_ACCEPT_XML_PREFERRED\": true,\n    \"DELETE_ALL_TODOS\": true,\n    \"POST_TODOS_415\": true,\n    \"PUT_TODOS_400\": true,\n    \"GET_TODO_404\": true,\n    \"GET_RESTORABLE_CHALLENGER_PROGRESS_STATUS\": true,\n    \"POST_SECRET_NOTE_BEARER_200\": true,\n    \"CREATE_NEW_CHALLENGER\": true,\n    \"PUT_TODOS_400_NO_AMEND_ID\": true,\n    \"GET_SECRET_NOTE_BEARER_200\": true,\n    \"POST_TODOS_TOO_LONG_DESCRIPTION_LENGTH\": true,\n    \"CREATE_SECRET_TOKEN_201\": true,\n    \"DELETE_HEARTBEAT_405\": true,\n    \"POST_TODOS\": true,\n    \"POST_UPDATE_TODO\": true,\n    \"TRACE_HEARTBEAT_501\": true,\n    \"OPTIONS_TODOS\": true,\n    \"OVERRIDE_TRACE_HEARTBEAT_501\": true,\n    \"PUT_TODOS_PARTIAL_200\": true,\n    \"GET_ACCEPT_XML\": true,\n    \"GET_ACCEPT_JSON\": true,\n    \"GET_TODOS_NOT_PLURAL_404\": true,\n    \"POST_SECRET_NOTE_403\": true,\n    \"OVERRIDE_PATCH_HEARTBEAT_500\": true,\n    \"POST_TODOS_404\": true,\n    \"GET_RESTORABLE_TODOS\": true,\n    \"POST_CREATE_XML\": true,\n    \"POST_TODOS_INVALID_EXTRA_FIELD\": true,\n    \"POST_TODOS_TOO_LONG_PAYLOAD_SIZE\": true,\n    \"POST_CREATE_JSON\": true,\n    \"GET_SECRET_NOTE_403\": true,\n    \"GET_TODOS\": true,\n    \"PUT_NEW_RESTORED_CHALLENGER_PROGRESS_STATUS\": true,\n    \"GET_TODO\": true,\n    \"CREATE_SECRET_TOKEN_401\": true,\n    \"POST_ALL_TODOS\": true,\n    \"GET_HEAD_TODOS\": true,\n    \"PUT_RESTORABLE_CHALLENGER_PROGRESS_STATUS\": true,\n    \"GET_TODOS_FILTERED\": true,\n    \"PUT_TODOS_MISSING_TITLE_400\": true,\n    \"POST_SECRET_NOTE_200\": true,\n    \"GET_ACCEPT_ANY_DEFAULT_JSON\": true,\n    \"GET_HEARTBEAT_204\": true,\n    \"GET_SECRET_NOTE_401\": true,\n    \"POST_CREATE_XML_ACCEPT_JSON\": true,\n    \"PATCH_HEARTBEAT_500\": true\n  }\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "NbX4TxG9bKkdccg2ir6lQ"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/json",
                "enabled": true,
                "uid": "qjR7hVsoyN3qUKFs7Zz0w"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "36 - PUT challenger guid CREATE wait 10 mins",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/challenger/{{challenger_id}}",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"xAuthToken\": \"0101c414-c0cf-4adb-8e05-7983b3e0172e\",\n  \"xChallenger\": \"{{challenger_id}}\",\n  \"secretNote\": \"\",\n  \"challengeStatus\": {\n    \"POST_CREATE_JSON_ACCEPT_XML\": false,\n    \"POST_TODOS_TOO_LONG_TITLE_LENGTH\": false,\n    \"GET_UNSUPPORTED_ACCEPT_406\": false,\n    \"GET_SECRET_NOTE_200\": false,\n    \"PUT_RESTORABLE_TODOS\": false,\n    \"OVERRIDE_DELETE_HEARTBEAT_405\": false,\n    \"POST_MAX_OUT_TITILE_DESCRIPTION_LENGTH\": false,\n    \"POST_SECRET_NOTE_401\": false,\n    \"DELETE_A_TODO\": false,\n    \"PUT_TODOS_FULL_200\": false,\n    \"GET_JSON_BY_DEFAULT_NO_ACCEPT\": false,\n    \"GET_CHALLENGES\": false,\n    \"POST_TODOS_BAD_DONE_STATUS\": false,\n    \"GET_ACCEPT_XML_PREFERRED\": false,\n    \"DELETE_ALL_TODOS\": false,\n    \"POST_TODOS_415\": true,\n    \"PUT_TODOS_400\": false,\n    \"GET_TODO_404\": false,\n    \"GET_RESTORABLE_CHALLENGER_PROGRESS_STATUS\": true,\n    \"POST_SECRET_NOTE_BEARER_200\": false,\n    \"CREATE_NEW_CHALLENGER\": true,\n    \"PUT_TODOS_400_NO_AMEND_ID\": false,\n    \"GET_SECRET_NOTE_BEARER_200\": false,\n    \"POST_TODOS_TOO_LONG_DESCRIPTION_LENGTH\": false,\n    \"CREATE_SECRET_TOKEN_201\": false,\n    \"DELETE_HEARTBEAT_405\": false,\n    \"POST_TODOS\": true,\n    \"POST_UPDATE_TODO\": false,\n    \"TRACE_HEARTBEAT_501\": false,\n    \"OPTIONS_TODOS\": true,\n    \"OVERRIDE_TRACE_HEARTBEAT_501\": false,\n    \"PUT_TODOS_PARTIAL_200\": false,\n    \"GET_ACCEPT_XML\": false,\n    \"GET_ACCEPT_JSON\": true,\n    \"GET_TODOS_NOT_PLURAL_404\": false,\n    \"POST_SECRET_NOTE_403\": false,\n    \"OVERRIDE_PATCH_HEARTBEAT_500\": false,\n    \"POST_TODOS_404\": false,\n    \"GET_RESTORABLE_TODOS\": false,\n    \"POST_CREATE_XML\": true,\n    \"POST_TODOS_INVALID_EXTRA_FIELD\": false,\n    \"POST_TODOS_TOO_LONG_PAYLOAD_SIZE\": false,\n    \"POST_CREATE_JSON\": true,\n    \"GET_SECRET_NOTE_403\": false,\n    \"GET_TODOS\": true,\n    \"PUT_NEW_RESTORED_CHALLENGER_PROGRESS_STATUS\": false,\n    \"GET_TODO\": false,\n    \"CREATE_SECRET_TOKEN_401\": false,\n    \"POST_ALL_TODOS\": false,\n    \"GET_HEAD_TODOS\": false,\n    \"PUT_RESTORABLE_CHALLENGER_PROGRESS_STATUS\": false,\n    \"GET_TODOS_FILTERED\": false,\n    \"PUT_TODOS_MISSING_TITLE_400\": false,\n    \"POST_SECRET_NOTE_200\": false,\n    \"GET_ACCEPT_ANY_DEFAULT_JSON\": true,\n    \"GET_HEARTBEAT_204\": false,\n    \"GET_SECRET_NOTE_401\": false,\n    \"POST_CREATE_XML_ACCEPT_JSON\": false,\n    \"PATCH_HEARTBEAT_500\": false\n  }\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "fjMpr6yZ8jVKHRuzYIMvZ"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/json",
                "enabled": true,
                "uid": "VXbjpWv0qZWqso0LUFbNm"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "14 - Mix Accept and Content-Type Challenges",
      "items": [
        {
          "type": "http",
          "name": "39 - POST todos XML to JSON",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/xml",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "xml",
              "json": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>my description</description>\n  <title>A title</title>\n</todo>",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo sent in xml but receive in JSON</description>\n  <title>todo sent in xml but receive in JSON</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "cRngiyFO7DJ4TKD7rSV32"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/json",
                "enabled": true,
                "uid": "hT9XlZvkZeNBBcyKQ7aoS"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "40 - POST todos JSON to XML",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/xml",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "zx105rXTF0YIOT1Hq0Fau"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/xml",
                "enabled": true,
                "uid": "4khYDKyw9MmVWLekN54od"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "15 - Status Code Challenges",
      "items": [
        {
          "type": "http",
          "name": "41 - DELETE heartbeat",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/heartbeat",
            "method": "DELETE",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 405",
                "enabled": true,
                "uid": "vEUoLHjzviI26tdUsmObd"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "42 - PATCH heartbeat",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/heartbeat",
            "method": "PATCH",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 500",
                "enabled": true,
                "uid": "NmPIaqE4qoapubzXnO8aG"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "43 - TRACE heartbeat (use script)",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/heartbeat",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {
              "req": "req.setMethod(\"TRACE\");"
            },
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 501",
                "enabled": true,
                "uid": "vbYpI0Op4oATdv2nXfNNj"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "44 - GET heartbeat",
          "seq": 4,
          "request": {
            "url": "{{base_url}}/heartbeat",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 204",
                "enabled": true,
                "uid": "8d88OuqRlLteKjDB5sy8N"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "16 - HTTP Method Override Challenges",
      "items": [
        {
          "type": "http",
          "name": "45 - POST heartbeat as DELETE",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/heartbeat",
            "method": "POST",
            "headers": [
              {
                "name": "X-HTTP-Method-Override",
                "value": "DELETE",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 405",
                "enabled": true,
                "uid": "PNKchD5HaFGRKSa3pfbjE"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "46 - POST heartbeat as PATCH",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/heartbeat",
            "method": "POST",
            "headers": [
              {
                "name": "X-HTTP-Method-Override",
                "value": "PATCH",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 500",
                "enabled": true,
                "uid": "bkJpMSPdMSxRNXJpL1YIM"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "47 - POST heartbeat as TRACE",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/heartbeat",
            "method": "POST",
            "headers": [
              {
                "name": "X-HTTP-Method-Override",
                "value": "TRACE",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 501",
                "enabled": true,
                "uid": "CoF1Qz92xZnsfIxU7XW89"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "17 - Authentication Challenges",
      "items": [
        {
          "type": "http",
          "name": "48 - POST secret token fail",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/secret/token",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "basic",
              "basic": {
                "username": "fake-user",
                "password": "fake-pass"
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 401",
                "enabled": true,
                "uid": "9FGCiUlP4swA6J6lCAMs6"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "49 - POST secret token pass",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/secret/token",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "basic",
              "basic": {
                "username": "admin",
                "password": "password"
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "vQKCtk9Jezg09iGeKThrE"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "18 - Authorization Challenges",
      "items": [
        {
          "type": "http",
          "name": "50 - GET secret note 403",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/secret/note",
            "method": "GET",
            "headers": [
              {
                "name": "X-AUTH-TOKEN",
                "value": "fake-token",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 403",
                "enabled": true,
                "uid": "yd49IHxvIC3k62YxMd9Nn"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "51 - GET secret note 401",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/secret/note",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 401",
                "enabled": true,
                "uid": "LcfnD3XIISYZg6iDIzBii"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "52 - GET secret note 200",
          "seq": 3,
          "request": {
            "url": "{{base_url}}/secret/note",
            "method": "GET",
            "headers": [
              {
                "name": "X-AUTH-TOKEN",
                "value": "0101c414-c0cf-4adb-8e05-7983b3e0172e",
                "enabled": true
              }
            ],
            "body": {
              "mode": "none",
              "json": "{\n  \"title\": \"todo sent in JSON but receive in XML\",\n  \"doneStatus\": false,\n  \"description\": \"todo sent in JSON but receive in XML\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "ql1dodrr7xH7QplmNUBhn"
              },
              {
                "name": "res.body[\"note\"]",
                "value": "",
                "enabled": true,
                "uid": "yTt53indsxN90jPKjRCBB"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "53 - POST secret note 200",
          "seq": 4,
          "request": {
            "url": "{{base_url}}/secret/note",
            "method": "POST",
            "headers": [
              {
                "name": "X-AUTH-TOKEN",
                "value": "0101c414-c0cf-4adb-8e05-7983b3e0172e",
                "enabled": true
              },
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"note\": \"{{noteText}}\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "noteText",
                  "value": "This note has text.",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "w9WA1Y6n0Zo8doapxiY6l"
              },
              {
                "name": "res.body[\"note\"]",
                "value": "eq {{noteText}}",
                "enabled": true,
                "uid": "DQSTez69owxRlD6QXGy1d"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "54 - POST secret note 401",
          "seq": 5,
          "request": {
            "url": "{{base_url}}/secret/note",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"note\": \"{{noteText}}\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "noteText",
                  "value": "This note has text.",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 401",
                "enabled": true,
                "uid": "WwDldwgFHBKd7n1e7lXrI"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "55 - POST secret note 403",
          "seq": 6,
          "request": {
            "url": "{{base_url}}/secret/note",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "X-AUTH-TOKEN",
                "value": "fake-token",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"note\": \"{{noteText}}\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "noteText",
                  "value": "This note has text.",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 403",
                "enabled": true,
                "uid": "WLaSdWhclsvcMNR5dmG5i"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "56 - GET secret note Bearer 200",
          "seq": 7,
          "request": {
            "url": "{{base_url}}/secret/note",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "0101c414-c0cf-4adb-8e05-7983b3e0172e"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "ZNCLyfsl83vr4XsUbLvg7"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "57 - POST secret note Bearer 200",
          "seq": 8,
          "request": {
            "url": "{{base_url}}/secret/note",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"note\": \"{{noteText}}\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "0101c414-c0cf-4adb-8e05-7983b3e0172e"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "noteText",
                  "value": "This note has text.",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "nBWU1U6LSHcY68WStjagp"
              },
              {
                "name": "res.body[\"note\"]",
                "value": "eq {{noteText}}",
                "enabled": true,
                "uid": "BrHUz0Ui8nx0yoeKCF2e1"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "19 - Miscellaneous Challenges",
      "items": [
        {
          "type": "http",
          "name": "58 - DELETE todo all",
          "seq": 1,
          "request": {
            "url": "{{base_url}}/todos/10",
            "method": "DELETE",
            "headers": [],
            "body": {
              "mode": "none",
              "json": "{\n  \"id\": 2,\n  \"title\": \"This is an amended title\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "M5IPaPDwSnowIIiIb7Nto"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "59 - POST todos all JSON",
          "seq": 2,
          "request": {
            "url": "{{base_url}}/todos",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              },
              {
                "name": "Accept",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"title\": \"Challenge 59 JSON Task Created\",\n  \"doneStatus\": false,\n  \"description\": \"This is a task created using POST for a JSON content type.\"\n}",
              "xml": "<todo>\n  <doneStatus>false</doneStatus>\n  <description>todo desc sent in XML</description>\n  <title>todo sent in XML</title>\n</todo>",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "RE5jIhKc4rQSVBhGEEIci"
              },
              {
                "name": "res.headers['content-type']",
                "value": "eq application/json",
                "enabled": true,
                "uid": "fPHfXt5dnoGxZLF0OUCri"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    }
  ],
  "activeEnvironmentUid": "5LcX1eeQuHn0zuFv1O8l1",
  "environments": [
    {
      "variables": [
        {
          "name": "base_url",
          "value": "https://apichallenges.herokuapp.com",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "challenger_id",
          "value": "8e838301-6013-4190-b965-1fa01755404e",
          "enabled": true,
          "secret": false,
          "type": "text"
        }
      ],
      "name": "Public Heroku"
    }
  ]
}